<Application x:Class="Core.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Core"
             StartupUri="Windows\MainWindows\MainWindow.xaml">
    
    <Application.Resources>
        
        <!--#region Window-->
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowState" Value="Normal"/>
            <Setter Property="WindowStyle" Value="None"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}"/>
            <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height}"/>
        </Style>

        <Style x:Key="WindowBorderStyle" TargetType="Border">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="5" Opacity="0.3" Direction="-90" RenderingBias="Quality" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region Color-->

        <!--Border-->
        <Color x:Key="Border.Background">#00000000</Color>
        <Color x:Key="Border.BorderBrush">#808080</Color>
        <Color x:Key="Border.DisabledBackground">#d3d3d3</Color>
        <Color x:Key="Border.MouseOverBorderBrush">#add8e6</Color>
        <Color x:Key="Border.FocusedBorderBrush">#FF0000</Color>
        <Color x:Key="Border.PopUp">#FFFFFF</Color>


        <!--Path-->
        <Color x:Key="Path.Fill">#808080</Color>
        <Color x:Key="Path.MouseOver">#FFFFFF</Color>
        <!--Forground-->
        <Color x:Key="Text.DisabledForeground">#000</Color>
        <!--#endregion-->

        <!--#region  Images-->

        <Style TargetType="{x:Type Image}">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        </Style>

        <!--#endregion-->

        <!--#region TabButton-->

        <Style x:Key="TabButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="Gray">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource Self}}" Value="false">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!--#region TextBox-->

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="AllowDrop" Value="true" />
            <EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border"
                                CornerRadius="5"
                                BorderThickness="2">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource Border.Background}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource Border.BorderBrush}" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.DisabledBackground}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Text.DisabledForeground}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region PasswordBox-->
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="●" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="AllowDrop" Value="true" />
            <EventSetter Event="GotKeyboardFocus" Handler="PasswordBox_GotKeyboardFocus"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border Name="Border"
                                CornerRadius="5"
                                BorderThickness="2">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource Border.Background}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource Border.BorderBrush}" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.DisabledBackground}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Text.DisabledForeground}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region CheckBox-->
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator VerticalAlignment="Center" HorizontalAlignment="Center">
                            <BulletDecorator.Background>
                                <SolidColorBrush Color="{DynamicResource Border.Background}"/>
                            </BulletDecorator.Background>
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" 
                                        Width="25" 
                                        Height="25" 
                                        CornerRadius="5" 
                                        BorderThickness="2">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource Border.Background}"/>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                                    </Border.BorderBrush>
                                    <Path Width="25"
                                          Height="25" 
                                          x:Name="CheckMark"
                                          Stroke="Black"
                                          StrokeThickness="3"
                                          Data="M0 0 M2.5 10 l5,5 l10,-10">
                                    </Path>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True">
                            </ContentPresenter>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.DisabledBackground}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="CheckMark" Property="Stroke">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Text.DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region ToggleButton-->
        <Style x:Key="SwitchTypeToggleButton" TargetType="{x:Type ToggleButton}">
            <Style.Resources>
                <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>
                <SolidColorBrush x:Key="ToggleButtonFalseBackground" Color="{StaticResource Color.Additional.LightGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground" Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground" Color="{StaticResource Color.Additional.MediumGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground" Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />

                <Style x:Key="FocusVisualStyleKey">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle StrokeThickness="1"  
                                           Stroke="Red"  
                                           Margin="-2"
                                           StrokeDashArray="3 3"  
                                           SnapsToDevicePixels="true"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ToggleButtonContentTextbox" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>

                <TextBlock x:Key="OffContent" Style="{StaticResource ToggleButtonContentTextbox}" Text="Off" />
                <Style x:Key="OnContentControl" TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontFamily="Wingdings 2"
                                           FontSize="24"
                                           FontWeight="Bold"
                                           Foreground="White"
                                           Style="{StaticResource ToggleButtonContentTextbox}"
                                           Text="" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="OffContentControl" TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontSize="24"
                                           Foreground="White"
                                           Style="{StaticResource ToggleButtonContentTextbox}"
                                           Text="" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

            </Style.Resources>

            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyleKey}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding ElementName=TopRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border x:Name="BackgroundEllipse1"
                                        CornerRadius="5"
                                           Grid.RowSpan="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Width="{Binding ElementName=MainRow, Path=ActualHeight}"
                                           Height="{Binding ElementName=MainRow, Path=ActualHeight}"
                                           HorizontalAlignment="Left"
                                           Background="{StaticResource ToggleButtonTrueBackground}">
                                </Border>
                                <Border x:Name="BackgroundEllipse2"
                                         Grid.Row="0"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="3"
                                        CornerRadius="5"
                                         Width="{Binding ElementName=MainRow, Path=ActualHeight}"
                                         Height="{Binding ElementName=MainRow, Path=ActualHeight}"
                                         HorizontalAlignment="Right"
                                         Background="{StaticResource ToggleButtonFalseBackground}">
                                </Border>
                                <Border x:Name="BackgroundBorder"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="1"
                                        Background="{StaticResource ToggleButtonTrueBackground}">
                                </Border>
                                <Border CornerRadius="5"
                                        BorderThickness="2" 
                                        Grid.ColumnSpan="3" 
                                        Grid.RowSpan="2">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                                    </Border.BorderBrush>
                                </Border>
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder" Grid.Column="0" />
                                <ContentControl Grid.Column="0" Focusable="False" Style="{StaticResource OnContentControl}"/>
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=MainRow, Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ContentControl Grid.Column="1" Focusable="False" Style="{StaticResource OffContentControl}" />
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left"
                                            Orientation="Horizontal">
                                    <Border Width="{Binding ElementName=AnimationSizeBorder, Path=ActualWidth}" />
                                    <Border x:Name="ForegroundEllipse" 
                                            CornerRadius="5"
                                            Width="{Binding ElementName=MainRow, Path=ActualHeight}"
                                            Height="{Binding ElementName=MainRow, Path=ActualHeight}"
                                            HorizontalAlignment="Right"
                                            Background="{StaticResource ToggleButtonTrueForeground}">
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Background" Value="{StaticResource ToggleButtonFalseForeground}" />
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region DatePiker-->
        <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}" BasedOn="{StaticResource {x:Type Calendar}}" />

        <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="#FF333333" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border x:Name="Border" BorderThickness="2" BorderBrush="Gray" CornerRadius="5" Background="Transparent">
                            <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="24" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="1"
                                      Height="20"
                                      Margin="2">
                                    <Border x:Name="ButtonArea"
                                            Margin="0,3,0,0"
                                            CornerRadius="3"
                                            BorderThickness="2"
                                            Grid.Column="1">
                                        <Border.Background>
                                            <SolidColorBrush Color="Transparent"/>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="Gray"/>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Border x:Name="ButtonArea1"
                                            Height="7"
                                            CornerRadius="3,3,0,0"
                                            Grid.Column="1"
                                            Margin="0,3,0,0"
                                            VerticalAlignment="Top">
                                        <Border.Background>
                                            <SolidColorBrush Color="Gray"/>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="Gray"/>
                                        </Border.BorderBrush>
                                    </Border>
                                    <Border x:Name="ButtonArea2"
                                            Height="6"
                                            Width="4"
                                            CornerRadius="1"
                                            BorderThickness="1"
                                            BorderBrush="White"
                                            Grid.Column="1"
                                            Margin="10,0,0,0"
                                            VerticalAlignment="Top">
                                        <Border.Background>
                                            <SolidColorBrush Color="Gray"/>
                                        </Border.Background>
                                    </Border>
                                    <Border x:Name="ButtonArea3"
                                            Height="6"
                                            Width="4"
                                            CornerRadius="1"
                                            BorderThickness="1"
                                            BorderBrush="White"
                                            Grid.Column="1"
                                            Margin="-10,0,0,0"
                                            VerticalAlignment="Top">
                                        <Border.Background>
                                            <SolidColorBrush Color="Gray"/>
                                        </Border.Background>
                                    </Border>
                                    <Button x:Name="PART_Button"
                                            Grid.Column="1" >
                                        <Button.Background>
                                            <SolidColorBrush Color="Transparent"/>
                                        </Button.Background>
                                        <Button.Resources>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border  Background="{TemplateBinding Background}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </Grid>
                                <DatePickerTextBox x:Name="PART_TextBox" 
                                                   Grid.Column="0" 
                                                   Margin="2"
                                                   Validation.ErrorTemplate="{x:Null}"
                                                   FocusVisualStyle="{x:Null}"
                                                   Focusable="{TemplateBinding Focusable}" 
                                                   HorizontalContentAlignment="Center" 
                                                   VerticalContentAlignment="Center">
                                </DatePickerTextBox>
                                <Grid x:Name="PART_DisabledVisual"
                                      Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      VerticalAlignment="Stretch"
                                      IsHitTestVisible="False"
                                      Opacity="0"
                                      Grid.Row="0">
                                    <Popup x:Name="PART_Popup"
                                            AllowsTransparency="True"
                                            Placement="Bottom"
                                            PlacementTarget="{Binding ElementName=PART_TextBox}"
                                            StaysOpen="False">
                                    </Popup>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="PART_DisabledVisual" Value="1"/>
                                <Setter Property="Background" TargetName="Border" Value="Lightgray"/>
                                <Setter Property="BorderBrush" TargetName="ButtonArea2" Value="Lightgray"/>
                                <Setter Property="BorderBrush" TargetName="ButtonArea3" Value="Lightgray"/>
                                <Setter Property="Background" TargetName="PART_TextBox" Value="Lightgray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="LightBlue"/>
                                <Setter Property="BorderBrush" TargetName="ButtonArea" Value="LightBlue"/>
                                <Setter Property="Background" TargetName="ButtonArea1" Value="LightBlue"/>
                                <Setter Property="Background" TargetName="ButtonArea2" Value="LightBlue"/>
                                <Setter Property="Background" TargetName="ButtonArea3" Value="LightBlue"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="Red"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region ComboBox-->
        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border Name="Border"
                        Grid.ColumnSpan="2" 
                        CornerRadius="5"
                        BorderThickness="2">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource Border.Background}"/>
                    </Border.Background>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                    </Border.BorderBrush>
                </Border>
                <Border Name="ButtonBorder"
                        Grid.Column="1" 
                        Margin="0" 
                        CornerRadius="0,5,5,0" 
                        BorderThickness="0">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource Border.Background}"/>
                    </Border.Background>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                    </Border.BorderBrush>
                </Border>
                <Path Name="Arrow"
                      Grid.Column="1" 
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource Path.Fill}"/>
                    </Path.Fill>
                </Path>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.MouseOver}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=IsMouseOver}" Value="true">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.MouseOverBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.MouseOver}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=IsFocused}" Value="true">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.MouseOver}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=Body, Path=IsFocused}" Value="true">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.FocusedBorderBrush}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.MouseOver}"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.MouseOver}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Border.Background" TargetName="Border">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Border.DisabledBackground}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Path.Fill}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="Body"
                              Focusable="True"
                              FocusVisualStyle="{x:Null}">
                            <ToggleButton Name="ToggleButton"
                                          ClickMode="Press" 
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}">
                            </ToggleButton>

                            <ContentPresenter Name="ContentSite" 
                                              Margin="5, 5, 23, 5" 
                                              IsHitTestVisible="False"
                                              HorizontalAlignment="Left" 
                                              VerticalAlignment="Center" 
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                            </ContentPresenter>

                            <TextBox Name="PART_EditableTextBox" 
                                     Margin="3, 3, 23, 3"                     
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Background="Transparent"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False"/>
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>

                            <Popup Name="Popup" 
                                   Placement="Bottom"
                                   Focusable="False" 
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" 
                                            Margin="0, 1, 0, 0"
                                            CornerRadius="2.5" 
                                            BorderThickness="2">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource Border.PopUp}"/>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource Border.BorderBrush}"/>
                                        </Border.BorderBrush>
                                    </Border>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="LightBlue"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="LightGray"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="Gray"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region TabControl-->

        <Style x:Key="TabControlTab" TargetType="TabControl">
            <Setter Property="Height" Value="120"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
            <Setter Property="Background" Value="#FFF1F1F1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>

        <!--#endregion-->

        <!--#region TabItem-->

        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="0,0,0,0" BorderBrush="White" CornerRadius="2.5,2.5,0,0" Margin="0,0">
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="10,0,10,0">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFF1F1F1" />
                                <Setter TargetName="Border" Property="TextElement.Foreground" Value="Red" />
                                <Setter TargetName="Border" Property="TextElement.FontSize" Value="16" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                <Setter TargetName="Border" Property="TextElement.Foreground" Value="Black" />
                                <Setter TargetName="Border" Property="TextElement.FontSize" Value="12" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
    </Application.Resources>
</Application>
